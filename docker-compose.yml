version: '3.7'

services:
  # postgres:
  #   image: postgres:16.2
  #   volumes:
  #     - ./postgres_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: mydb
  #     POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - sn-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     start_interval: 60s
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.4
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    command:
      - start-dev
      - --health-enabled=true
      - --metrics-enabled=true

    environment:
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_PORT: 8989
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HOSTNAME_STRICT: false
      
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://snserver-db:5432/${KEYCLOAK_POSTGRES_DB}
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    ports:
      - 8989:8080
      - 9000:9000
    volumes: 
      - ./themes:/opt/keycloak/providers/
    restart: unless-stopped
    networks:
      - sn-network
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/health/live']
      interval: 5s
      timeout: 5s
      retries: 30

volumes:
  postgres_data:
    driver: local

networks:
  sn-network:
    external: true